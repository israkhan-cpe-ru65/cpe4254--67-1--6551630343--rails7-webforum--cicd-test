name: Deploy Rails App to EC2

on:
  push:
    branches:
      - release

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read 
    
jobs:
  test-ssh:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ vars.EC2_SSH }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          eval $(ssh-agent -s)
          ssh-add ~/.ssh/id_rsa

      - name: Disable SSH host key checking (optional)
        run: |
          echo "Host ${{ vars.EC2_HOST }}" >> ~/.ssh/config
          echo "    StrictHostKeyChecking no" >> ~/.ssh/config

      - name: Test SSH Connection
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@${{ vars.EC2_HOST }} "uptime"
          
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Move code
        run: rsync -av --remove-source-files project/WebForum/ .

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1
          # role-to-assume: arn:aws:iam::920373016599:role/github-actions-runners

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.eu-north-1.amazonaws.com
          
      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #     role-to-assume: arn:aws:iam::920373016599:user/github-actions-runner
      #     aws-region: eu-north-1

      # - name: Login to Amazon ECR Private
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v2
      # - name: Log in to AWS ECR
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     AWS_REGION: ${{ secrets.AWS_REGION }}  # Ensure AWS_REGION is set properly
      #   uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image to ECR
        env:
          ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          ECR_REPOSITORY: rails-webforum/dev
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ vars.EC2_HOST }}
          username: ec2-user
          key: ${{ vars.EC2_SSH }}
          passphrase: ${{ secrets.EC2_SSH_KEY_PASSPHRASE }}
          port: 22
          script: |
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
            docker pull ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/rails-webforum/dev:latest
            docker stop rails-webforum/dev || true
            docker rm rails-webforum/dev || true
            docker run -d --name webforum -p 3000:3000 -e RAILS_RELATIVE_URL_ROOT=$RAILS_RELATIVE_URL_ROOT ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/rails-webforum/dev:latest
